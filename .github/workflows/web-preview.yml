name: PR Preview Deployment
env:
  ACTOR: ${{ github.actor }}
  BASE_URL: cu-webring.org
  PREVIEW_PATH: preview/${{ github.actor }}/pr-${{ github.event.number }}
run-name: ${{ github.actor }}  is deploying a preview for PR ${{ github.event.number }}

on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
    # triggers a workflow if a pr modifies any of these files
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ env.BASE_URL }}/preview/${{ github.actor }}/pr-${{ github.event.number }}/
    permissions:
      pull-requests: write
      contents: read
      # needed for deployment
      id-token: write
      pages: write

    steps:
      - uses: actions/checkout@v4

      # Skipping due to the nature of json_file (Has the export-keyword)
      # - name: Validate JSON
      #   run: bash ./.github/workflows/validate_json.sh

      - name: Prepare Files for Deployment
        run: |
          mkdir -p ${{ env.PREVIEW_PATH }}
          rsync -av --exclude='preview' ./ preview/${{ github.actor }}/pr-${{ github.event.number }}

      - name: Deploy to GitHub Pages Preview
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.PREVIEW_PATH }}

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: true
          preview_branch: ${{ env.PREVIEW_PATH }} # appends to the base url in environment

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = '${{ steps.deployment.outputs.page_url }}';
            const comment = `
              âš¡ Congrats! Your Preview deployment is ready!
      
              You can view the preview of the webring with your changes at:
              ${previewUrl}
      
              This preview will be automatically updated as you make changes to your PR.
            `.trim();
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });