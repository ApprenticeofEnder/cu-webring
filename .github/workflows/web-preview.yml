name: PR Preview Deployment

env:
  ACTOR: ${{ github.actor }}
  BASE_URL: cu-webring.org
  PREVIEW_PATH: preview/${{ github.actor }}/pr-${{ github.event.number }}

run-name: ${{ github.actor }} is deploying a preview for PR ${{ github.event.number }}

on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      deployments: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Build step to prepare files
      - name: Prepare files
        run: |
          rm -rf preview-build
          mkdir -p preview-build
          rsync -av --progress ./ preview-build/ --exclude preview-build --exclude .git
          touch preview-build/.nojekyll  # Add .nojekyll to bypass Jekyll processing

      # Deploy to GitHub Pages
      - name: Deploy preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./preview-build
          destination_dir: ${{ env.PREVIEW_PATH }}
          keep_files: true

      # Comment on PR with corrected preview links
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const customUrl = `https://${process.env.BASE_URL}/${process.env.PREVIEW_PATH}/`;
            const pagesPreviewUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/${process.env.PREVIEW_PATH}/`;
            
            const comment = `
              âš¡ Preview Deployment Ready!
              
              **GitHub Pages URL:**  
              [${pagesPreviewUrl}](${pagesPreviewUrl})
              
              **Custom Domain URL:**  
              [${customUrl}](${customUrl})
              
              Assets (CSS/JS) will load correctly in these links.
            `.trim();
            
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Failed to post comment:', error);
            }