name: PR Preview Deployment

env:
  ACTOR: ${{ github.actor }}
  BASE_URL: cu-webring.org
  PREVIEW_PATH: preview/${{ github.actor }}/pr-${{ github.event.number }}

run-name: ${{ github.actor }} is deploying a preview for PR ${{ github.event.number }}

on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      deployments: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Create a new branch for the preview deployment
      - name: Create preview branch
        run: |
          git checkout -b pr-preview-${{ github.event.number }}
          
      # Build step if needed (in this case, just copying files)
      - name: Prepare files
        run: |
          rm -rf preview-build
          mkdir -p preview-build
          rsync -av --progress ./ preview-build/ --exclude preview-build --exclude .git
          
      # Deploy to GitHub Pages
      - name: Deploy preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./preview-build
          destination_dir: ${{ env.PREVIEW_PATH }}
          keep_files: true

      # Comment on PR with preview link
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/${process.env.PREVIEW_PATH}/`;
        
            const comment = `
              âš¡ Congrats! Your Preview deployment is ready!
              
              You can view the preview of the webring with your changes at:
              ${previewUrl}
              
              Alternative URL (if using custom domain):
              https://${process.env.BASE_URL}/${process.env.PREVIEW_PATH}/
              
              This preview will be automatically updated as you make changes to your PR.
            `.trim();
            
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
              console.log('Comment posted successfully!');
            } catch (error) {
              console.error('Failed to post comment:', error);
            }